---
namespace: nginx

common:
  metadata:
    name: Nginx
    publisher: monk.io
    tags: load balancing, dynamic content serving, security, reverse proxy, high performance, ssl/tls encryption, scalability, static content serving, web traffic management, http cache, web server
    icon: https://assets.monk.io/icons/nginx-logo-FF65602A76-seeklogo.com.png
    version: 1.0
    website: https://www.nginx.com/
    source: https://github.com/nginx/nginx
    description: |
      Nginx is a powerful and lightweight web server software known for its high performance and scalability. It acts as a reverse proxy, load balancer, and HTTP cache, enabling efficient handling of incoming client requests.

      Nginx is widely used to improve the performance, security, and reliability of websites and web applications. Its modular architecture and extensive configuration options make it a popular choice among developers and system administrators seeking to optimize their server infrastructure.

      Whether you're running a small personal website or managing a large-scale enterprise application, Nginx provides a robust foundation for delivering content quickly and reliably.
  variables:
    email:
      type: string
      value: do-not-reply@domain.com
    domain:
      type: string
      value: domain.com
    use-certbot:
      type: string
      value: true
  files:
    index-html:
      container: nginx
      path: /usr/share/nginx/html/index.html
      mode: 0644
      contents: <<< files/index.html

basic:
  defines: runnable
  inherits: nginx/common
  metadata:
    name: NGINX
    description: |
      Basic Nginx server with just default configuration.
  containers:
    nginx:
      image: nginx
      image-tag: latest
  services:
    nginx:
      container: nginx
      port: 80
      protocol: tcp
      host-port: 80

ssl:
  defines: runnable
  inherits: nginx/basic
  metadata:
    name: NGINX
    description: |
      Basic Nginx server with certbot sidecar container to generate valid letsencrypt certificate.

      ---

      Notes:

      | Variable    | Description                                               | Default                                               |
      | ----------- | --------------------------------------------------------- | ----------------------------------------------------- |
      | email       | Email where the Letsencrypt notifications will be send to | do-not-reply@domain.commailto:do-not-reply@domain.com |
      | domain      | Domain that the certificate needs to be requested for     | domain.com                                            |
      | use-certbot | Whether we should use a certbot                           | true                                                  |
  connections:
    nginx:
      runnable: nginx/ssl
      service: nginx
  services:
    nginx:
      container: nginx
      port: 80
      protocol: tcp
      host-port: 80
    nginx-ssl:
      container: nginx
      port: 443
      protocol: tcp
      host-port: 443
  variables:
    nginx-hostname:
      type: string
      value: <- connection-hostname("nginx")
      env: NGINX_HOST
  files:
    config-init:
      container: nginx
      path: /tmp/init.conf
      mode: 0644
      contents: <<< files/letsencrypt_init.conf
    config-running:
      container: nginx
      path: /tmp/running.conf
      mode: 0644
      contents: <<< files/letsencrypt_running.conf
    entrypoint-nginx:
      container: nginx
      path: /docker-entrypoint.d/99-init-config.sh
      mode: 0755
      contents: <<< files/entrypoint-nginx.sh
    entrypoint-certbot:
      container: certbot
      path: /entrypoint.sh
      mode: 0755
      contents: <<< files/entrypoint-certbot.sh
  containers:
    nginx:
      paths:
        - <- `${monk-volume-path}/certbot/conf:/etc/letsencrypt`
        - <- `${monk-volume-path}/certbot/www:/var/certbot`
      environment:
        - <- `USE_CERTBOT=${use-certbot}`
    certbot:
      image: certbot/certbot
      image-tag: latest
      paths:
        - <- `${monk-volume-path}/certbot/conf:/etc/letsencrypt`
        - <- `${monk-volume-path}/certbot/www:/var/certbot`
      bash: /entrypoint.sh
      environment:
        - <- `USE_CERTBOT=${use-certbot}`

reverse-proxy:
  defines: runnable
  metadata:
    publisher: monk.io
    email: jakub@monk.io
    tags: certbot, webserver, nginx, ssl, proxy for services, reverse proxy
    icon: https://assets.monk.io/icons/nginx-logo-FF65602A76-seeklogo.com.png
    description: |
      Nginx reverse proxy to use in conjuction with monk and connection system.
      Update in this runnable following variables:
        connection-name - with the connection name generated by monk
        http-port       - with the http port that you want nginx to be exposed as (default 80)
    name: nginx-reverse-proxy for monk connections
    shortname: nginx-reverse-proxy
    version: 1.0
    website: https://www.nginx.com/
    source: https://github.com/nginx/nginx
  services:
    http:
      container: nginx-reverse-proxy
      port: 1024
      protocol: tcp
      host-port: <- $http-port
  files:
    server-def:
      contents: |
        server {
          listen 0.0.0.0:1024;
          location / {
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            proxy_pass http://{{ v "proxy-target-host" }}:{{ v "proxy-target-port" }};
          }
        }
      mode: 0644
      path: /etc/nginx/conf.d/default.conf
      container: nginx-reverse-proxy
  containers:
    nginx-reverse-proxy:
      image: nginx
      image-tag: latest
  variables:
    proxy-target-host:
      value: <- connection-hostname("upstream")
      type: string
    proxy-target-port:
      value: <- connection-port("upstream")
      type: string
    http-port:
      value: 80
      type: int
  connections:
    upstream:
      description: "connect-to-your-runnable"

reverse-proxy-do-not-use:
  defines: runnable
  metadata:
    publisher: monk.io
    email: jakub@monk.io
    tags: certbot, webserver, nginx, ssl, proxy for services, reverse proxy
    icon: https://assets.monk.io/icons/nginx-logo-FF65602A76-seeklogo.com.png
    description: |
      this does nothing, please do not use.
      it just sleeps 300 with some basic config
    name: nginx-reverse-proxy for monk connections
    shortname: nginx-reverse-proxy-do-not-use
    version: 1.0
    website: https://www.nginx.com/
    source: https://github.com/nginx/nginx
  services:
    http:
      container: nginx-reverse-proxy
      port: 1024
      protocol: tcp
      host-port: <- $http-port
  files:
    server-def:
      contents: |
        server {
          listen 0.0.0.0:1024;
          location / {
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            proxy_pass http://{{ v "proxy-target-host" }}:{{ v "proxy-target-port" }};
          }
        }
      mode: 0644
      path: /etc/nginx/conf.d/default.conf
      container: nginx-reverse-proxy
  containers:
    nginx-reverse-proxy:
      image: nginx
      image-tag: latest
      bash: sleep 300
  variables:
    proxy-target-host:
      value: <- connection-hostname("upstream")
      type: string
    proxy-target-port:
      value: <- connection-port("upstream")
      type: string
    http-port:
      value: 80
      type: int
  connections:
    upstream:
      description: "connect-to-your-runnable"
